{"version":3,"sources":["components/OldTimer/minhand.png","components/OldTimer/sechand.png","components/OldTimer/hourhand.png","components/Timebox/Timebox.js","components/OldTimer/OldTimer.js","components/msConverter/msConverter.js","containers/Timer/Timer.js","axios.js","API/API.js","containers/DeleteNamesModal/DeleteNamesModal.js","containers/ManageNames/ManageNames.js","UI/Button/Button.js","components/ButtonMenus/ButtonMenus.js","App.js","serviceWorker.js","Store/reducer.js","index.js"],"names":["module","exports","Timebox","props","label","value","OldTimer","srotate","time","seconds","hrotate","hours","mins","mrotate","sec","secondhand","min","minhand","hour","hourhand","className","style","Msconverter","days","timeNow","msLeft","diffDay","dateIwant","toString","split","diffHours","parseFloat","diffMin","diffSeconds","Math","floor","Object","values","map","k","key","Timer","state","Date","now","this","interval","setInterval","setState","clearInterval","Component","instance","axios","create","baseURL","sendData","name","post","then","response","catch","error","console","log","getNames","get","deleteName","delete","sys_id","DeleteNamesModal","modal_active","modal","clicked","onClick","btnCancelled","btnConfirm","ManageNames","clickedModal","changeNameSate","e","target","sendNewName","nameString","names","includes","alert","service","status","newNames","push","data","updateNames","index","confirmDelete","newPropsNames","splice","cancelDelete","shouldComponentUpdate","nextProps","nextState","that","list","modalClicked","onChange","type","connect","dispatch","Button","click","ButtonMenus","homePage","history","changePath","countdownPage","manageNamesPage","componentDidMount","location","pathname","buttons","activePages","item","func","function","path","component","pageActive","withRouter","App","dbNames","n","length","randomNumber","parseInt","random","Boolean","window","hostname","match","initialState","reducer","action","store","createStore","Reducer","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1e05de0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/minhand.e33f41ee.png\";","module.exports = __webpack_public_path__ + \"static/media/sechand.2804fed3.png\";","module.exports = __webpack_public_path__ + \"static/media/hourhand.fb5f536c.png\";","import React from 'react';\nimport PropTypes from 'prop-types'; \n\n\nconst Timebox = props => {\n\n    let label = props.label;\n\n    if(props.value !== 1){\n        label += 's'\n    }\n\n    return (\n        <div>\n            <p>{props.value} {label}</p>\n        </div>\n    )\n}\n\nTimebox.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.number\n}\n\nexport default Timebox;","import React from 'react';\nimport './OldTimer.css';\nimport minhand from './minhand.png';\nimport secondhand from './sechand.png';\nimport hourhand from './hourhand.png';\nimport PropTypes from 'prop-types'; \n\n\nconst OldTimer = props => {\n\n    let sdegree = props.time.seconds.value * 6;\n    let hdegree = props.time.hours.value * 30 + (props.time.mins.value / 2);\n    let mdegree = props.time.mins.value * 6;\n\n    const srotate = \"rotate(\" + sdegree + \"deg)\"\n    const hrotate = \"rotate(\" + hdegree + \"deg)\"\n    const mrotate = \"rotate(\" + mdegree + \"deg)\";\n\n    const sec = {\n        'position': 'absolute',\n        'width': '30px',\n        'height': '600px',\n        'top': '0px',\n        'left': '285px',\n        'background': \"url(\" + secondhand + \")\",\n        'zIndex': 3,\n        'transform':  srotate\n    };\n        \n    const min = {\n        'position': 'absolute',\n        'width': '30px',\n        'height': '600px',\n        'top': '0px',\n        'left': '285px',\n        'background': \"url(\" + minhand + \")\",\n        'zIndex': 2,\n        'transform':  mrotate\n    };\n        \n    const hour = {\n        'position': 'absolute',\n        'width': '30px',\n        'height': '600px',\n        'top': '0px',\n        'left': '285px',\n        'background': \"url(\" + hourhand + \")\",\n        'zIndex': 1,\n        'transform':  hrotate\n    };\n\n    return(\n        <div>\n            <ul className='clock'>\t\n                    <li style={sec}></li>\n                    <li style={hour}></li>\n                    <li style={min}></li>\n            </ul>\n        </div>\n    )\n}\n\nOldTimer.propTypes = {\n    time: PropTypes.object\n}\n\nexport default OldTimer;","import React from 'react';\nimport Timebox from \"../Timebox/Timebox\";\nimport OldTimer from '../OldTimer/OldTimer';\n\n\nconst Msconverter = props => {\n\n    const time = {\n        days: {\n            value: 0,\n            label: 'Day'\n        },\n        hours: {\n            value: 0,\n            label: 'Hour'\n        },\n        mins: {\n            value: 0,\n            label: 'Minute'\n        },\n        seconds: {\n            value: 0,\n            label: 'Second'\n        }\n    }\n\n\n    const timeNow = props.timeNow;\n    const dateIwant = props.dateIwant;\n\n    const dateDiff = dateIwant - timeNow;\n\n    let msLeft = '';\n\n    let diffDay = dateDiff / 1000 / 60 / 60 / 24 ;\n    diffDay = diffDay.toString().split(\".\");\n    msLeft = '0.' + diffDay[1]\n\n    let diffHours = (parseFloat(msLeft) * 24);\n    diffHours = diffHours.toString().split('.');\n    msLeft = '0.' + diffHours[1]\n\n    let diffMin = (parseFloat(msLeft) * 60);\n    diffMin = diffMin.toString().split('.');\n    msLeft = '0.' + diffMin[1]\n\n    let diffSeconds = (parseFloat(msLeft) * 60);\n    diffSeconds = diffSeconds.toString().split('.');\n\n    time.days.value = Math.floor(diffDay[0]);\n    time.hours.value = Math.floor(diffHours[0]);\n    time.mins.value = Math.floor(diffMin[0]);\n    time.seconds.value = Math.floor(diffSeconds[0]);\n\n    return(\n        <div>\n            {\n                Object.values(time).map(k => {\n                    return <Timebox\n                    key = {k.value}\n                    value = {k.value}\n                    label = {k.label}\n                    />\n                })\n            }\n\n            <OldTimer\n            time = {time}\n            />\n\n        </div>\n    );\n\n}\n\nexport default Msconverter;","import React, { Component } from 'react'\n//const ms = require('pretty-ms')\nimport Msconverter from '../../components/msConverter/msConverter';\nimport PropTypes from 'prop-types'; \n\nclass Timer extends Component{\n\n    state = {\n        timeNow: Date.now(),\n        dateIwant: new Date('2020/06/04')\n    }\n\n    render(){\n\n        return(\n            <div>\n                <p>You have this much time left...</p>\n                <Msconverter\n                timeNow={this.state.timeNow}\n                dateIwant={this.state.dateIwant}\n                />\n            </div>\n        );\n        \n    }\n    componentDidMount() {\n        this.interval = setInterval(() => this.setState({ timeNow: Date.now() }), 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n}\n\nTimer.propTypes = {\n    timeNow: PropTypes.number,\n    dateIwant: PropTypes.number\n}\n\nexport default Timer;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://vic-app-df7a3.firebaseio.com/\"\n});\n\nexport default instance;","import axios from '../axios';\n\n\nexport function sendData(name){\n\n    return axios.post('/names.json', name)\n        .then(response => {return response})\n        .catch(error => console.log(error));\n\n}\n\n\nexport function getNames() {\n    return axios.get(\"https://vic-app-df7a3.firebaseio.com/names.json\")\n            .then(response => { return response})\n\n}\n\nexport function deleteName(name){\n\n    return axios.delete('/names/' + name.sys_id + '.json')\n        .then(response => {return response})\n        .catch(error => console.log(error));\n\n}","import React, { Component } from 'react';\nimport connect from 'react-redux';\nimport './DeleteNamesModal.css'\n\nclass DeleteNamesModal extends Component{\n    state = {\n        modal_active: false\n    }\n\n    render(){\n\n        let modal = null;\n        if(this.props.clicked === true){\n            modal = (\n                <div key={this.props.key} className='Modal'>\n                    <h2>Are you sure you want to delete this record?</h2>\n                    <p>{this.props.name}</p>\n                    <div className='actionRow'>\n                        <button onClick={this.props.btnCancelled} className ='button'>Cancel</button>\n                        <div className='divider'/>\n                        <button onClick={this.props.btnConfirm} className ='button'>Confirm</button>\n                    </div>\n                </div>\n            )    \n        }\n\n        return(\n            <div>\n                {modal}\n            </div>\n        )\n    }\n}\n\n\n\nexport default (DeleteNamesModal)","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport './ManageNames.css';\nimport * as service from '../../API/API'\nimport DeleteNamesModal from '../DeleteNamesModal/DeleteNamesModal';\n\nclass ManageNames extends Component{\n\n    state = {\n        name: '',\n        clickedModal: ''\n    };\n\n    changeNameSate = (e) => {\n        this.setState({name: e.target.value});\n    }\n\n    sendNewName= () => {\n        const name = [this.state.name];\n        const nameString = this.state.name;\n\n        if(this.props.names.includes(nameString) || nameString === ''){\n            alert('NO CAN DO HOMIE');\n        }else{\n            service.sendData(name)\n                .then(response => {\n                    if(response.status === 200){\n                        const newNames = [...this.props.names];\n                        newNames.push({\n                            sys_id: response.data.name,\n                            name: nameString\n                        });\n                        this.props.updateNames(newNames);\n                    }\n            });\n        }\n    };\n\n    deleteName = (index) => {\n        const names = this.props.names;\n        if(names[index].sys_id === 'default'){\n            return\n        }\n\n        this.setState({clickedModal: names[index].sys_id})\n    }\n\n    confirmDelete = (index) => {\n        const names = this.props.names;\n        const newPropsNames = [...names];\n        newPropsNames.splice(index, 1);\n\n        service.deleteName(names[index]);\n        this.props.updateNames(newPropsNames);\n    }\n\n    cancelDelete = () => {\n        const blank = 'help';\n\n        this.setState({clickedModal: blank})\n    }\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        console.log(nextState.clickedModal)\n        if(nextState.clickedModal !== this.state.clickedModal){\n            return true;\n        }\n        if(this.props.names !== nextProps.names){\n            return true\n        }\n        return false;\n    }\n\n    render(){\n\n        const that = this;\n        const list = this.props.names.map((name, index) => {\n            const modalClicked =  (this.state.clickedModal !== name.sys_id) ? false : true;\n\n            return (\n                <li key={name.sys_id} onClick={() => that.deleteName(index)}>\n                    {name.name}\n                    <DeleteNamesModal\n                    key={name.sys_id}\n                    name={name.name}\n                    clicked={modalClicked}\n                    btnConfirm = {() => that.confirmDelete(index)}\n                    btnCancelled = {that.cancelDelete}/>\n                </li>\n            )\n        });\n\n        return(\n            <div className='inputArea'>\n                <h1>Under Construction...</h1>\n                <h2>Please enter a new name</h2>\n                    <input className=\"input\" onChange={this.changeNameSate}></input>\n                    <input\n                        className=\"inputButton\"\n                        type=\"button\"\n                        value=\"Create Name\"\n                        onClick={this.sendNewName}\n                    />\n                    <ul className='nameList'>\n                        {list}\n                    </ul>\n            </div>\n        )\n    }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n    return{\n        names: state.names\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        updateNames: (value) => dispatch({type: 'UPDATE_NAMES', value: value})\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageNames);","import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => {\n    return(\n        <div>\n            <button className = \"button\" onClick={props.click}>\n                {props.label}\n            </button>\n        </div>\n    )\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport Timer from '../../containers/Timer/Timer';\nimport ManageNames from '../../containers/ManageNames/ManageNames';\nimport Button from '../../UI/Button/Button';\nimport './ButtonMenus.css'\nimport { connect } from 'react-redux';\n\n\n\nclass ButtonMenus extends Component{\n\n    homePage = () => {\n        this.props.history.push(\"/how-long-does-vic-have/\");\n        this.props.changePath(\"/how-long-does-vic-have/\");\n    }\n\n    countdownPage = () => {\n        this.props.history.push(\"/how-long-does-vic-have/countdown\");\n        this.props.changePath(\"/how-long-does-vic-have/countdown\");\n    }\n\n    manageNamesPage = () => {\n        this.props.history.push(\"/how-long-does-vic-have/manage-names\");\n        this.props.changePath(\"/how-long-does-vic-have/manage-names\");\n    }\n\n\n    componentDidMount = () => {\n        this.props.changePath(this.props.location.pathname)\n    };\n\n    render(){\n        const that = this\n        const buttons = this.props.activePages.map(function(item){\n            const func = that[item.function + 'Page'];\n\n            if(that.props.path !== item.path){\n                return (\n                <li className=\"flexLi\"> \n                    <Button \n                    click={func}\n                    label={item.label}\n                    /> \n                </li>\n                );\n            }\n        });\n\n        return(\n        <div>\n            <ul className=\"flexRow\">\n                {buttons}\n            </ul>\n            <Switch>\n                <Route path=\"/how-long-does-vic-have/countdown\" component={Timer} />\n                <Route path=\"/how-long-does-vic-have/manage-names\" component={ManageNames} />\n                <Route path=\"/how-long-does-vic-have/\" component=\"\" />\n            </Switch>\n        </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = state => {\n    return{\n        activePages: state.activePages,\n        path: state.pageActive\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        changePath: (value) => dispatch({type: 'CHANGE_PAGE', value: value})\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ButtonMenus));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport ButtonMenus from \"./components/ButtonMenus/ButtonMenus\";\nimport * as service from './API/API'\n\nclass App extends Component{\n\n  componentDidMount = () => {\n    service.getNames()\n      .then(response => {\n        const newNames = [...this.props.names];\n        const dbNames = response.data;\n\n        for(var n in dbNames){\n          const name = {\n            sys_id: [n],\n            name: dbNames[n][0]\n          }\n\n            if(!newNames.includes(name))\n            newNames.push(name);\n        }\n\n        this.props.updateNames(newNames);\n      });\n}\n\n  render(){\n    const length = this.props.names.length;\n    const randomNumber = parseInt(Math.random() * length)\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Hello...{this.props.names[randomNumber].name}</h1>\n          <ButtonMenus/>\n          \n        </header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return{\n    names: state.names\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return{\n      updateNames: (value) => dispatch({type: 'UPDATE_NAMES', value: value})\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    names: [\n        {\n            sys_id: 'default',\n            name: 'Vic'\n        }\n    ],\n    pageActive: \"/\",\n    activePages:[\n        {\n            function:'home',\n            label: 'Home',\n            path: '/how-long-does-vic-have/'\n        },\n        {\n            function:'countdown',\n            label: 'Count Down',\n            path: '/how-long-does-vic-have/countdown'\n        },\n        {\n            function:'manageNames',\n            label: 'Manage Names',\n            path: '/how-long-does-vic-have/manage-names'\n        }\n    ]\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case \"CHANGE_PAGE\":\n            return {\n                ...state,\n                pageActive: action.value\n            }\n        \n        case \"UPDATE_NAMES\":\n            return {\n                ...state,\n                names: action.value\n            }\n            \n\n        default:\n            return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport Reducer from './Store/reducer'\nimport { Provider } from 'react-redux';\n\n\nconst store = createStore(Reducer);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}